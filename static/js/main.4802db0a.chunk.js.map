{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","toUTCString","slice","timeTimerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","PureComponent","getRandomName","value","now","toString","App","nameTimerId","hasClock","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","Component","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAFtD,EAKEC,YAAc,EALhB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZR,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,KAIpDM,QAAQC,KAAK,EAAKX,MAAMC,eACvB,OAfP,gCAkBE,SAAmBW,GAEbA,EAAUC,YAAcP,KAAKQ,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAtBzE,kCA0BE,WACEN,OAAOS,cAAcV,KAAKD,eA3B9B,oBA8BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKN,MAAMC,qBAxCtB,GAA2BiB,IAAMC,eCNjC,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWnB,OAAO,GAE3C,MAAM,SAAN,OAAgBiB,GAQX,IAAMG,EAAb,4MACEC,YAAc,EADhB,EAGEpB,YAAc,EAHhB,EAKEL,MAAe,CACba,UAAW,UACXa,UAAU,GAPd,EA8BEC,iBAAmB,SAACC,GAClBA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEiB,UAAU,KAjC9B,EAoCEI,gBAAkB,SAACF,GACjBA,EAAMC,iBAEN,EAAKpB,SAAS,CAAEiB,UAAU,KAvC9B,uDAUE,WAA2B,IAAD,OACxBpB,KAAKmB,YAAclB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CACZI,UAAWO,QAEZ,MAEHW,SAASC,iBAAiB,cAAe1B,KAAKqB,kBAE9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,mBAnB5C,kCAsBE,WACEvB,OAAOS,cAAcV,KAAKmB,aAC1BlB,OAAOS,cAAcV,KAAKD,aAE1B0B,SAASE,oBAAoB,cAAe3B,KAAKqB,kBACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,mBA3B/C,oBA0CE,WACE,MAAgCxB,KAAKN,MAA7Ba,EAAR,EAAQA,UAAWa,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOb,UAAWA,WAjDvC,GAAyBK,IAAMgB,WCZ/BC,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.4802db0a.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  currentTime: string\n};\n\ntype Props = {\n  clockName: string\n};\n\nexport class Clock extends React.PureComponent<Props> {\n  state: State = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  timeTimerId = 0;\n\n  componentDidMount(): void {\n    this.timeTimerId = window.setInterval(() => {\n      this.setState({\n        currentTime: new Date().toUTCString().slice(-12, -4),\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>):\n  void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string\n  hasClock: boolean\n};\n\nexport class App extends React.Component<{}, State> {\n  nameTimerId = 0;\n\n  timeTimerId = 0;\n\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount(): void {\n    this.nameTimerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.nameTimerId);\n    window.clearInterval(this.timeTimerId);\n\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}